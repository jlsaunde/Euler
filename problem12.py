# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
# 1: 1
# 3: 1,3
# 6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?


def runProblem12():
    print('Starting problem 12 calculation...')
    #while we haven't found the triangular with 500 factors
    highestFactorCount = 0
    triangleNumber = 1
    triangleAdder = 2
    currentHighestTriangle = 0

    while highestFactorCount < 500:
        factorCount = countFactors(triangleNumber)
        if factorCount > highestFactorCount:
            highestFactorCount = factorCount
            currentHighestTriangle = triangleNumber
            print(highestFactorCount)
        triangleNumber += triangleAdder
        triangleAdder += 1

    print('The triangle number %d has a factor count of %d.' % (currentHighestTriangle, highestFactorCount))
    print('Problem 12 calculation complete.')


def countFactors(number):
    count = 0
    for x in range(1, number + 1):
        if number % x == 0:
            count += 1
    return count

runProblem12()